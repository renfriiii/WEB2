CREATE TABLE users (
   id INT AUTO_INCREMENT PRIMARY KEY,
   fullname VARCHAR(100) NOT NULL,
   email VARCHAR(100) NOT NULL UNIQUE,
   username VARCHAR(50) NOT NULL UNIQUE,
   password VARCHAR(255) NOT NULL,
   address TEXT,
   phone VARCHAR(20),
   profile_image VARCHAR(255), -- File name or path of the image
   is_active BOOLEAN DEFAULT FALSE, 
   remember_token VARCHAR(64) NULL,
   last_login TIMESTAMP NULL,
   
   -- OTP fields for password reset
   otp_code VARCHAR(6), -- 6-digit OTP code
   otp_purpose ENUM('PASSWORD_RESET', 'EMAIL_VERIFICATION', 'LOGIN'),
   otp_created_at TIMESTAMP NULL, -- When the OTP was created
   otp_expires_at TIMESTAMP NULL, -- When the OTP expires
   otp_is_used BOOLEAN DEFAULT FALSE, -- Whether the OTP has been used
   
   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
   
   INDEX (email, otp_code, otp_is_used) -- Index for faster OTP lookups
);



CREATE TABLE admins (
  admin_id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(50) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  fullname VARCHAR(100) NOT NULL,
  email VARCHAR(100) NOT NULL UNIQUE,
  role VARCHAR(50) NOT NULL, -- Role can be 'super_admin', 'content_manager', etc.
  is_active BOOLEAN DEFAULT TRUE,
  last_login TIMESTAMP NULL,
  remember_token VARCHAR(64) NULL,
  profile_image VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Generate a new hash for password 'admin' and insert admin account
INSERT INTO admins (username, password, fullname, email, role)
VALUES ('admin', '21232f297a57a5a743894a0e4a801fc3.', 'HirayaFit Admin', 'leiumarsayco@gmail.com', 'super_admin');


-- Messages table to store conversations between users and admins
CREATE TABLE messages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    sender_type ENUM('user', 'admin') NOT NULL,
    sender_id INT NOT NULL,
    receiver_type ENUM('user', 'admin') NOT NULL,
    receiver_id INT NOT NULL,
    subject VARCHAR(255) DEFAULT NULL,
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT FALSE,
    message_type ENUM('general', 'support', 'order_inquiry', 'complaint') DEFAULT 'general',
    parent_message_id INT DEFAULT NULL, -- For threading/replies
    attachment_path VARCHAR(500) DEFAULT NULL,
    priority ENUM('low', 'normal', 'high', 'urgent') DEFAULT 'normal',
    status ENUM('active', 'archived', 'deleted') DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    -- Indexes for better performance
    INDEX idx_sender (sender_type, sender_id),
    INDEX idx_receiver (receiver_type, receiver_id),
    INDEX idx_conversation (sender_type, sender_id, receiver_type, receiver_id),
    INDEX idx_unread (is_read, receiver_type, receiver_id),
    INDEX idx_parent (parent_message_id),
    INDEX idx_created (created_at),
    
    -- Foreign key constraints
    FOREIGN KEY (parent_message_id) REFERENCES messages(id) ON DELETE SET NULL
);

-- Conversations table to track ongoing conversations
CREATE TABLE conversations (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    admin_id INT DEFAULT NULL, -- NULL if not yet assigned to an admin
    subject VARCHAR(255) NOT NULL,
    status ENUM('open', 'in_progress', 'resolved', 'closed') DEFAULT 'open',
    priority ENUM('low', 'normal', 'high', 'urgent') DEFAULT 'normal',
    category ENUM('general', 'support', 'order_inquiry', 'complaint', 'feedback') DEFAULT 'general',
    last_message_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    -- Indexes
    INDEX idx_user (user_id),
    INDEX idx_admin (admin_id),
    INDEX idx_status (status),
    INDEX idx_priority (priority),
    INDEX idx_last_message (last_message_at),
    
    -- Foreign key constraints
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (admin_id) REFERENCES admins(admin_id) ON DELETE SET NULL
);

-- Message participants table for group messaging (future expansion)
CREATE TABLE message_participants (
    id INT AUTO_INCREMENT PRIMARY KEY,
    conversation_id INT NOT NULL,
    participant_type ENUM('user', 'admin') NOT NULL,
    participant_id INT NOT NULL,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    left_at TIMESTAMP NULL,
    is_active BOOLEAN DEFAULT TRUE,
    
    -- Indexes
    INDEX idx_conversation (conversation_id),
    INDEX idx_participant (participant_type, participant_id),
    
    -- Foreign key constraints
    FOREIGN KEY (conversation_id) REFERENCES conversations(id) ON DELETE CASCADE,
    
    -- Unique constraint to prevent duplicate participants
    UNIQUE KEY unique_participant (conversation_id, participant_type, participant_id)
);

-- Message read status table for detailed tracking
CREATE TABLE message_read_status (
    id INT AUTO_INCREMENT PRIMARY KEY,
    message_id INT NOT NULL,
    reader_type ENUM('user', 'admin') NOT NULL,
    reader_id INT NOT NULL,
    read_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    -- Indexes
    INDEX idx_message (message_id),
    INDEX idx_reader (reader_type, reader_id),
    
    -- Foreign key constraints
    FOREIGN KEY (message_id) REFERENCES messages(id) ON DELETE CASCADE,
    
    -- Unique constraint to prevent duplicate read records
    UNIQUE KEY unique_read (message_id, reader_type, reader_id)
);

-- Notification preferences table
CREATE TABLE notification_preferences (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_type ENUM('user', 'admin') NOT NULL,
    user_id INT NOT NULL,
    email_notifications BOOLEAN DEFAULT TRUE,
    push_notifications BOOLEAN DEFAULT TRUE,
    sms_notifications BOOLEAN DEFAULT FALSE,
    notification_frequency ENUM('immediate', 'hourly', 'daily') DEFAULT 'immediate',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    -- Unique constraint
    UNIQUE KEY unique_user_prefs (user_type, user_id)
);

-- Insert default notification preferences for existing users
INSERT INTO notification_preferences (user_type, user_id, email_notifications, push_notifications)
SELECT 'user', id, TRUE, TRUE FROM users;

INSERT INTO notification_preferences (user_type, user_id, email_notifications, push_notifications)
SELECT 'admin', admin_id, TRUE, TRUE FROM admins;



CREATE TABLE reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    product_id VARCHAR(50) NOT NULL,
    transaction_id VARCHAR(100) NOT NULL,
    rating INT NOT NULL CHECK (rating >= 1 AND rating <= 5),
    review_text TEXT NOT NULL,
    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY unique_review (user_id, product_id, transaction_id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);